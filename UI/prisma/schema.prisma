generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "foreignKeys"
}

model Make {
  id   Int    @id @default(autoincrement())
  name String @default("")

  Vehicle Vehicle[]
}

model Colour {
  id   Int    @id @default(autoincrement())
  name String @default("")

  Vehicle Vehicle[]
}

model User {
  id       Int     @id @default(autoincrement())
  name     String  @default("")
  email    String  @unique @default("")
  password String  @default("")
  isAdmin  Boolean @default(false)

  Vehicle Vehicle[]
  Session Session[]
}

model Vehicle {
  id          Int    @id @default(autoincrement())
  makeID      Int    @default(0)
  colourID    Int    @default(0)
  userID      Int    @default(0)
  numberPlate String @unique @default("")

  make   Make   @relation(fields: [makeID], references: [id])
  colour Colour @relation(fields: [colourID], references: [id])
  user   User   @relation(fields: [userID], references: [id])

  Detection Detection[]

  @@index([makeID])
  @@index([colourID])
  @@index([userID])
}

model Detection {
  id          Int      @id @default(autoincrement())
  make        String   @default("")
  colour      String   @default("")
  numberPlate String   @default("")
  timestamp   DateTime @default(now())
  vehicleID   Int      @default(0)

  vehicle Vehicle @relation(fields: [vehicleID], references: [id])

  @@index([vehicleID])
}

model Session {
  id           Int      @id @default(autoincrement())
  userID       Int      @default(0)
  refreshToken String   @unique @default("")
  createdAt    DateTime @default(now())
  expiresAt    DateTime @default(now())
  revoked      Boolean  @default(false)
  replacedByID Int?     @unique

  user       User     @relation(fields: [userID], references: [id], onDelete: Cascade)
  replacedBy Session? @relation("SessionReplacedBy", fields: [replacedByID], references: [id])
  parent     Session? @relation("SessionReplacedBy")
}
